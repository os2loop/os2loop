{#
/**
 * @file
 * Default theme implementation for comments.
 *
 * Available variables:
 * - author: Comment author. Can be a link or plain text.
 * - content: The content-related items for the comment display. Use
 *   {{ content }} to print them all, or print a subset such as
 *   {{ content.field_example }}. Use the following code to temporarily suppress
 *   the printing of a given child element:
 *   @code
 *   {{ content|without('field_example') }}
 *   @endcode
 * - created: Formatted date and time for when the comment was created.
 *   Preprocess functions can reformat it by calling DateFormatter::format()
 *   with the desired parameters on the 'comment.created' variable.
 * - changed: Formatted date and time for when the comment was last changed.
 *   Preprocess functions can reformat it by calling DateFormatter::format()
 *   with the desired parameters on the 'comment.changed' variable.
 * - permalink: Comment permalink.
 * - submitted: Submission information created from author and created
 *   during template_preprocess_comment().
 * - user_picture: The comment author's profile picture.
 * - status: Comment status. Possible values are:
 *   unpublished, published, or preview.
 * - title: Comment title, linked to the comment.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class may contain one or more of the following classes:
 *   - comment: The current template type; for instance, 'theming hook'.
 *   - by-anonymous: Comment by an unregistered user.
 *   - by-{entity-type}-author: Comment by the author of the parent entity,
 *     eg. by-node-author.
 *   - preview: When previewing a new or edited comment.
 *   The following applies only to viewers who are registered users:
 *   - unpublished: An unpublished comment visible only to administrators.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - content_attributes: List of classes for the styling of the comment content.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - threaded: A flag indicating whether the comments are threaded or not.
 *
 * These variables are provided to give context about the parent comment (if
 * any):
 * - parent_comment: Full parent comment entity (if any).
 * - parent_author: Equivalent to author for the parent comment.
 * - parent_created: Equivalent to created for the parent comment.
 * - parent_changed: Equivalent to changed for the parent comment.
 * - parent_title: Equivalent to title for the parent comment.
 * - parent_permalink: Equivalent to permalink for the parent comment.
 * - parent: A text string of parent comment submission information created from
 *   'parent_author' and 'parent_created' during template_preprocess_comment().
 *   This information is presented to help screen readers follow lengthy
 *   discussion threads. You can hide this from sighted users using the class
 *   visually-hidden.
 *
 * These two variables are provided for context:
 * - comment: Full comment object.
 * - entity: Entity the comments are attached to.
 *
 * @see template_preprocess_comment()
 *
 * @ingroup themeable
 */
#}

{# Remove comment id from element id on top comment #}
{% set is_top_comment = attributes.hasClass('top-comment') %}
{% if is_top_comment %}
  {% set attributes = attributes.setAttribute('id', 'top-comment') %}
{% endif %}

{% set classes = [
  'js-comment',
  'os2loop-comment',
  'entity',
  is_top_comment ? 'top-comment'
] %}

<article{{ attributes.addClass(classes) }}>
  {#
    Hide the "new" indicator by default, let a piece of JavaScript ask the
    server which comments are new for the user. Rendering the final "new"
    indicator here would break the render cache.
  #}
  <div class="container entity-header d-inline-flex align-items-top">
    {% include '@os2loop_theme/field/user-info.html.twig' with {user: drupal_entity('user', comment.uid.target_id), date: created, entity: comment, attributes: attributes} %}
    {% include '@os2loop_theme/navigation/comment-tasks.html.twig' with {node: drupal_entity('node', comment.entity_id.target_id)} %}
  </div>
  {#
    Indicate the semantic relationship between parent and child comments for
    accessibility. The list is difficult to navigate in a screen reader
    without this information.
  #}
  <div{{ content_attributes.addClass('entity-body') }}>
    <div class="row">
      <div class="col">
        {% if parent %}
        {# TODO: the value for length (215) is arbitrary - this should be handled using JS function instead #}
        {% set toggle_parent_comment = parent_comment.os2loop_post_comment.value|length > 215 %}
          <p class="visually-hidden">{{ parent }}</p>
          <div class="parent-entity" aria-hidden="true">
            <div class="parent-entity-header row no-gutters mb-10">
              {% include '@os2loop_theme/field/user-info.html.twig' with {user: drupal_entity('user', parent_comment.uid.target_id), date: parent_created, entity: parent_comment, attributes: null} %}
            </div>
            <div class="parent-entity-body{{ toggle_parent_comment ? ' collapse' }}" id="parent-entity-body-{{ parent_comment.id() }}">
              {{ parent_comment.os2loop_post_comment.value }}
            </div>
            {% if toggle_parent_comment %}
              <i class="bi bi-chevron-up toggle collapsed" data-toggle="collapse" href="#parent-entity-body-{{ parent_comment.id() }}" role="button"></i>
            {% endif %}
          </div>
          <div class="child-entity-heading mt-30 mb-15">{{ 'Reply'|t }}</div>
        {% endif %}
        {{ content.os2loop_post_comment }}
      </div>
    </div>
    <div class="row align-items-end">
      {% if content.os2loop_post_comment_media['#items'] is not empty %}
        <div class="col">{{ content.os2loop_post_comment_media }}</div>
      {% endif %}
      <div class="col-auto ml-auto">{{ content.flag_os2loop_upvote_correct_answer }}</div>
    </div>
  </div>
</article>
