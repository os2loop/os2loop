{#
/**
 * Macro to display a node title bar with links and metadata.
 *
 * Variables:
 * - title: The title to display.
 * - class: A class on the H1 element.
 * - node: The node related to the title.
 * - content: Content of the node related to the title.
 * - show_subject: Whether to show subject below the title.
 */
#}
{% macro title(title, class, node, content, show_subject=true, options={}) %}
  <div class="title d-flex justify-content-between align-items-center my-3 row no-gutters">
    <div class="header">
      {{ title_prefix }}
      <h1{{ title_attributes }} class="{{ class }}">
        {% if options.link|default(false) %}
          {% set url = path('entity.node.canonical', {node: node.id}) %}
          <a href="{{ url }}">{{ title }}</a>
        {% else %}
          {{ title }}
        {% endif %}
      </h1>
      {{ title_suffix }}
      {% if show_subject %}
        {{ content.os2loop_shared_subject }}
      {% endif %}
    </div>
    <div>
    {% include '@os2loop_theme/navigation/content-tasks.html.twig' %}
    </div>
  </div>
{% endmacro %}

{#
/**
 * Macro to display a term.
 *
 * Variables:
 * - type: Display type configuration of the field value (Link to term or not).
 * - content: The content of the field.
 * - use_color_picker: Whether to use color picker value configured for the taxonomy.
 * - color_picker_value: THe value of the configured term color picker.
 */
#}
{% macro term(type, content, use_color_picker=false, color_picker_value='') %}
  {% if type is same as 'link' %}
    <a class="badge badge-secondary {{ use_color_picker ? color_picker_value }}" href="{{ path('entity.taxonomy_term.canonical', {'taxonomy_term': content['#options'].entity.id}) }}">{{ content['#options'].entity.name.value }}</a>
  {% else %}
    <span class="badge badge-light badge-pill">{{ content['#plain_text'] }}</span>
  {% endif %}
{% endmacro %}

{#
/**
* Macro to display table of contents.
*
* Variables:
* - items: Elements in collection.
* - collection: The document collection.
* - current_node_id: The id of the current node.
*/
#}
{% macro table_of_contents(items, collection, current_node_id=null) %}
  {% if items %}
    <div class="list-group document-collection-list rounded-0">
      {% for item in items %}
        {% set document = item.document %}
        {% if current_node_id is same as(document.id) %}
          <a href="{{ path('entity.node.canonical', {node: document.id, collection: collection.id}) }}" class="list-group-item list-group-item-action document-collection-item active">
            {{ document.title.value }} <span class="badge badge-dark badge-pill float-right mt-1">{{ 'Currently open'|t }}</span>
          </a>
        {% else %}
          <a href="{{ path('entity.node.canonical', {node: document.id, collection: collection.id}) }}" class="list-group-item list-group-item-action document-collection-item">
            {{ document.title.value }}
          </a>
        {% endif %}
        {{ item.children ? _self.table_of_contents(item.children, collection, current_node_id) }}
      {% endfor %}
    </div>
  {% endif %}
{% endmacro %}
